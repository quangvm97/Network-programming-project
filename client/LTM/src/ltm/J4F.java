/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ltm;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

/**
 * @author aaa
 */
public class J4F extends javax.swing.JFrame {

    /**
     * Creates new form J4F
     */
    public J4F() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButtonConnectServer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelTimeDownload = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelStatusFile = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabelStatus = new javax.swing.JLabel();
        jLabelFileSize = new javax.swing.JLabel();
        jTextFieldIp = new javax.swing.JTextField();
        jButtonShowFileSharing = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("IP: ");

        jLabel2.setText("Port: ");

        jTextField1.setText("4000");
        jTextField1.addActionListener(evt -> jTextField1ActionPerformed(evt));

        jButtonConnectServer.setText("Connect Server");
        jButtonConnectServer.addActionListener(evt -> {
            jButtonConnectServerActionPerformed(evt);
            connectServer();
        });
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {"Item 1", "Item 2", "Item 3", "Item 4", "Item 5"};

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel3.setText("Files in Server");

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {"Item 1", "Item 2", "Item 3", "Item 4", "Item 5"};

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel4.setText("Host");

        jLabel5.setText("Time : ");

        jLabelTimeDownload.setText("0");

        jLabel7.setText("ms");

        jLabel8.setText("Status File : ");

        jLabelStatusFile.setText("UnKnown");

        jLabel10.setText("File size : ");

        jLabel12.setText("byte");

        jLabel13.setText("Status : ");

        jLabelStatus.setText("Disconnected");
        jLabelStatus.setForeground(Color.RED);
        jLabelFileSize.setText("0");

        jTextFieldIp.setText("127.0.0.1");
        jTextFieldIp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIpActionPerformed(evt);
            }
        });

        jButtonShowFileSharing.setText("Show Files Sharing");
        jButtonShowFileSharing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowFileSharingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(191, 191, 191))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelTimeDownload)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel7)
                                .addGap(152, 152, 152)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelFileSize)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(33, 33, 33)
                                .addComponent(jLabelStatusFile)
                                .addGap(66, 66, 66))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)
                                .addComponent(jButtonConnectServer)
                                .addGap(52, 52, 52)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonShowFileSharing)
                                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonConnectServer)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabelStatus)
                                        .addComponent(jTextFieldIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonShowFileSharing))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabelTimeDownload)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabelFileSize)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabelStatusFile))
                                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectServer() {

        newFile.mkdir();
        thread = new Thread(() -> {
            try {
                String port = "";
                if (!port.equals(jTextField1.getText())) {
                    port = jTextField1.getText();
                    jButtonConnectServer.setEnabled(true);
                }
                Socket theSocket = new Socket(jTextFieldIp.getText(), Integer.parseInt(port));
                os = new DataOutputStream(theSocket.getOutputStream());
                data = new DataInputStream(theSocket.getInputStream());
                is = new DataInputStream(theSocket.getInputStream());
                String respone = is.readLine();
                if (respone.equals("1")) {
                    System.out.println(respone);
                    jLabelStatus.setText("Connected");
                    jLabelStatus.setForeground(Color.GREEN);
                    os.writeUTF("ahihi");
                } else {
                    System.out.println("Nhap ten file can download: ");
                    inputFileName = input.readLine();
                    os.writeUTF(inputFileName);
                    parseJson(input.readLine());
                    long filesize = is.readLong();// Doc kich thuoc file Server gui
                    if (filesize == 0) {
                        System.out.println("File Khong ton tai!");
                    } else {
                        inputFile = new File(newFile.getPath() + "/" + inputFileName);// Luu file download theo duong dan
                        if (!inputFile.exists()) {
                            inputFile.createNewFile();
                        }
                        fileReader = new FileOutputStream(inputFile);
                        System.out.println("Kich thuoc file la: " + filesize + " byte");
                        // Doc va luu file to
                        if (filesize > 1000) {
                            while (filesize >= 1000) {
                                int dataLength;
                                dataBuffer = new byte[1000];
                                if ((dataLength = data.read(dataBuffer, 0, 1000)) == 1000) {
                                    fileReader.write(dataBuffer, 0, dataLength);
                                } else {
                                    System.out.println("Download loi! Vui long download lai!");
                                    break;
                                }
                                filesize = filesize - 1000;
                            }
                            int dataLength = (int) filesize;
                            dataBuffer = new byte[dataLength];
                            if ((dataLength = data.read(dataBuffer, 0, dataLength)) == dataLength) {
                                fileReader.write(dataBuffer, 0, dataLength);
                                System.out.println("Download file " + inputFileName + " thanh cong!");
                            } else {
                                System.out.println("Download loi! Vui long download lai!");
//                                break;
                            }
                            // Doc va luu file nho
                        } else {
                            int dataLength = (int) filesize;
                            dataBuffer = new byte[dataLength];
                            if ((dataLength = data.read(dataBuffer, 0, dataLength)) == dataLength) {
                                fileReader.write(dataBuffer, 0, dataLength);
                                System.out.println("Download file " + inputFileName + " thanh cong");
                            } else {
                                System.out.println("Download loi! Vui long download lai!");
//                                break;
                            }
                        }//end else
                    }// end else
//                }
                    System.out.println("Ban co muon tiep tuc download khong? Y/N: ");
                    String x = input.readLine();
                    data.close();
                    is.close();
                    os.close();
                    theSocket.close();
                    theSocket.setKeepAlive(false);
                }
            } // end try
            catch (Exception ex) {
                System.err.println(ex);
            }
        });
        thread.start();
    }

    private static java.util.List<ClientDetails> parseJson(String json) throws JSONException {
        List<ClientDetails> clients = new ArrayList<>();
        JSONObject jsonRoot = new JSONObject(json);
        JSONArray jsonCollection = jsonRoot.getJSONArray("client");
        for (int i = 0; i < jsonCollection.length(); i++) {
            ClientDetails client =
                    new ClientDetails(jsonCollection.getJSONObject(i).getString("ip"),
                            jsonCollection.getJSONObject(i).getString("port"));
            System.out.println(client.getIp() + "\t" + client.getPort());
            clients.add(client);
        }
        return clients;
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButtonConnectServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectServerActionPerformed
        // TODO add your handling code here:
//        new Client();
    }//GEN-LAST:event_jButtonConnectServerActionPerformed

    private void jTextFieldIpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIpActionPerformed

    private void jButtonShowFileSharingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowFileSharingActionPerformed
        JList list = new JList(new String[]{"foo", "bar", "foobar"});
        ListDialog dialog = new ListDialog("", list);
        dialog.show();
    }//GEN-LAST:event_jButtonShowFileSharingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(J4F.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(J4F.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(J4F.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(J4F.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new J4F().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConnectServer;
    private javax.swing.JButton jButtonShowFileSharing;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelFileSize;
    public static javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelStatusFile;
    private javax.swing.JLabel jLabelTimeDownload;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldIp;
    private DataOutputStream os;
    private String inputFileName;
    private BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    private File inputFile;
    private FileOutputStream fileReader;
    private DataInputStream data, is;
    private byte[] dataBuffer;
    private File newFile = new File("download");// Tao folder luu file Download
    private Thread thread;
    // End of variables declaration//GEN-END:variables
}
